{
	"patcher" : 	{
		"fileversion" : 1,
		"appversion" : 		{
			"major" : 7,
			"minor" : 3,
			"revision" : 5,
			"architecture" : "x64",
			"modernui" : 1
		}
,
		"rect" : [ 702.0, 221.0, 1117.0, 574.0 ],
		"editing_bgcolor" : [ 0.9, 0.9, 0.9, 1.0 ],
		"bglocked" : 0,
		"openinpresentation" : 0,
		"default_fontsize" : 12.0,
		"default_fontface" : 0,
		"default_fontname" : "Arial",
		"gridonopen" : 1,
		"gridsize" : [ 15.0, 15.0 ],
		"gridsnaponopen" : 1,
		"objectsnaponopen" : 1,
		"statusbarvisible" : 2,
		"toolbarvisible" : 1,
		"lefttoolbarpinned" : 0,
		"toptoolbarpinned" : 0,
		"righttoolbarpinned" : 0,
		"bottomtoolbarpinned" : 0,
		"toolbars_unpinned_last_save" : 0,
		"tallnewobj" : 0,
		"boxanimatetime" : 200,
		"enablehscroll" : 1,
		"enablevscroll" : 1,
		"devicewidth" : 0.0,
		"description" : "",
		"digest" : "",
		"tags" : "",
		"style" : "",
		"subpatcher_template" : "",
		"boxes" : [ 			{
				"box" : 				{
					"id" : "obj-9",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 455.266663, 10.799999, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-8",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 314.666656, 15.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-7",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 167.333328, 15.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 2"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-4",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 400.0, 388.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 6"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-5",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 323.5, 379.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 5"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-6",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 247.0, 379.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 4"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-3",
					"maxclass" : "newobj",
					"numinlets" : 0,
					"numoutlets" : 1,
					"outlettype" : [ "" ],
					"patching_rect" : [ 20.0, 15.0, 30.0, 22.0 ],
					"style" : "",
					"text" : "in 1"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-2",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 169.0, 386.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 3"
				}

			}
, 			{
				"box" : 				{
					"id" : "obj-1",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 92.5, 377.0, 37.0, 22.0 ],
					"style" : "",
					"text" : "out 2"
				}

			}
, 			{
				"box" : 				{
					"code" : "require(\"migen-lib\");\r\n\r\n\r\ninit_multiple_masses(m_data, X0, XR0){\r\n\t\r\n\tdata_dim = dim(m_data);\r\n\tdata_chans = channels(m_data);\r\n\t\r\n\tfor(i=0; i< data_chans; i+=1){\r\n\t\tpoke(m_data, X0, 0, i);\r\n\t\tpoke(m_data, XR0, 1, i);\r\n\t}\r\n\treturn data_dim, data_chans;\r\n}\r\n\r\n\r\nset_pos(m_data, i, val, val2){\r\n\tpoke(m_data, val,  0, i);\r\n\tpoke(m_data, val2,  1, i);\r\n\treturn 0;\r\n}\r\n\r\n\r\nget_pos(m_data, i){\r\n\treturn peek(m_data, 0, i);\r\n}\r\n\r\n\r\n\r\ncompute_string(m_data, M, K, Z){\r\n\r\n\tdata_chans = channels(m_data);\r\n\tfor(i=0; i< data_chans; i+=1){\r\n\t\tif ((i==0) || (i == data_chans-1))\r\n\t\t\tpoke(m_data, 0, 2, i);\r\n\t\telse {\r\n\t\t\ttmp = 2 * peek(m_data, 0, i) \r\n\t\t\t\t- peek(m_data,1, i)\r\n\t\t\t\t+ (peek(m_data,2, i)) / M;\r\n\t\t\tpoke(m_data, peek(m_data, 0, i) , 1, i);\r\n\t\t\tpoke(m_data,tmp, 0, i);\r\n\t\t\tpoke(m_data, 0, 2, i);\r\n\t\t\t}\r\n\t}\r\n\r\n\t\r\n\t\r\n\tfor(i=0; i< data_chans-1; i+=1) {\r\n\t\tx1 = peek(m_data, 0, i);\r\n\t\tx1r = peek(m_data, 1, i);\r\n\t\tx2 = peek(m_data, 0, i+1);\r\n\t\tx2r = peek(m_data, 1, i+1);\r\n\t\r\n\t\r\n\t\tf = K * (x1 - x2) + \r\n\t\t\tZ * ((x1-x1r) - (x2-x2r)) ;\r\n\t\r\n\t\tpoke(m_data, peek(m_data,2, i) - f, 2, i);\r\n\t\tpoke(m_data, peek(m_data,2, i+1) + f, 2, i+1);\r\n\r\n\t\t}\r\n\t\treturn 0;\r\n}\r\n\r\n\r\ncompute_moving_contact(mult_data, c_data, zone, K, Z, thresh ){\r\n\t\r\n\tdata_chans = channels(mult_data);\r\n\t\r\n\tpoint = zone * data_chans;\r\n\t\r\n\tm1 = floor(point);\r\n\tm2 = m1 + 1;\r\n\tif(m2 > data_chans)\r\n\t\tm2 = data_chans;\r\n\t\r\n\talpha = pow(point - m1, 1);\t\r\n\t\r\n\tx1 = peek(c_data, 0);\r\n\tx1r = peek(c_data, 1);\r\n\tx2 = peek(mult_data, 0, m1);\r\n\tx2r = peek(mult_data, 1, m1);\r\n\t\r\n\tf = (1-alpha)*(K * (x1 - x2) + Z * ((x1-x1r) - (x2-x2r))) ;\r\n\t\r\n\tif ((x1-x2) > 0){\r\n\t\tpoke(c_data, peek(mult_data,2) - f, 2);\r\n\t\tpoke(mult_data, peek(mult_data,2, m1) + f, 2, m1);\r\n\r\n\t}\r\n\t\r\n\tx1 = thresh;\r\n\tx1r = thresh;\r\n\tx2 = peek(mult_data, 0, m1);\r\n\tx2r = peek(mult_data, 1, m1);\r\n\t\r\n\tf = (1-alpha)*(K * (x1 - x2) + 0 * ((x1-x1r) - (x2-x2r))) ;\r\n\tif ((x1-x2) < 0){\r\n\t\tpoke(mult_data, peek(mult_data,2, m1) + f, 2, m1);\r\n\r\n\t}\r\n\t\r\n\tx1 = peek(c_data, 0);\r\n\tx1r = peek(c_data, 1);\r\n\tx2 = peek(mult_data, 0, m2);\r\n\tx2r = peek(mult_data, 1, m2);\r\n\t\r\n\t\r\n\tf = alpha*(K * (x1 - x2) + Z * ((x1-x1r) - (x2-x2r))) ;\r\n\t\r\n\tif ((x1-x2) > 0){\r\n\t\tpoke(c_data, peek(mult_data,2) - f, 2);\r\n\t\tpoke(mult_data, peek(mult_data,2, m2) + f, 2, m2);\r\n\r\n\t}\r\n\t\r\n\tx1 = thresh;\r\n\tx1r = thresh;\r\n\tx2 = peek(mult_data, 0, m2);\r\n\tx2r = peek(mult_data, 1, m2);\r\n\t\r\n\tf = (alpha)*(K * (x1 - x2) + 0 * ((x1-x1r) - (x2-x2r))) ;\r\n\tif ((x1-x2) < 0){\r\n\t\tpoke(mult_data, peek(mult_data,2, m2) + f, 2, m2);\r\n\t}\t\r\n\r\n\treturn m1, m2, alpha;\r\n}\r\n\r\n\r\ncompute_moving_nlBow(mult_data, m2_data, nlZ, nls, pt){\r\n\t\r\n\tx1 = peek(mult_data, 0, pt);\r\n\tx1r = peek(mult_data, 1, pt);\r\n\tx2 = peek(m2_data, 0);\r\n\tx2r = peek(m2_data, 1);\r\n\t\r\n\tf = 0.;\r\n\tvel = ((x1-x1r) - (x2-x2r));\r\n\t\r\n\t// Sharpness factor: determines the slope at the tipping point (around zero)\r\n\tsharpness = 3;\r\n\t\r\n\t// the tipping point of the piecewise function, depending on the sharpness\r\n\ttip_vel = nls / sharpness;\r\n\t\r\n\t// Calculate damping for 0 < abs(vel) < tip_vel : Zp = nlZ * (nlscale / tip_vel)\r\n\t//Zp = nlZ / sharpness;\r\n\tdampZ = nlZ ;\r\n\tslipZ = nlZ  * 0.25;\r\n\t\r\n\t\r\n\t// now calculate the force resulting from the piecewise linear function\r\n\t\r\n\tif(abs(vel) < (tip_vel))  {\r\n\t\tf = dampZ * vel ;\r\n\t}\r\n\telse if(abs(vel) < nls)  {\r\n\t\tif(vel > 0) \r\n\t\t\tf = tip_vel * dampZ - slipZ * vel ;\r\n\t\telse\r\n\t\t\tf = - tip_vel * dampZ - slipZ * vel ;\r\n\t}\r\n\telse f = 0.;\r\n\t\r\n\t\t\r\n\tpoke(mult_data, peek(mult_data,2, pt) - f, 2, pt);\r\n\tpoke(m2_data, peek(m2_data,2) + f, 2);\r\n\t\r\n\treturn f;\r\n}\r\n\r\n\r\nBuffer motion;\r\n\r\n// Model data structures\r\n\r\nData strmasses(3, 40);\r\nData gnd(3);\r\nData inpos(3);\r\nData inp4(3);\r\n\r\n// Control Rate Parameters\r\nParam Z(0.000003);\r\nParam K(0.000005);\r\nParam M(1.);\r\nParam cK(0.01);\r\nParam cZ(0.1);\r\n\r\nParam nlscale(0.00005);\r\nParam nlz(0.08);\r\n\r\nParam exPos(0.9);\r\nParam lPos(0.95);\r\n\r\n// Model initialisation flag\r\nHistory model_init(0);\r\n\r\nHistory dim(1);\r\nHistory chan(1);\r\nHistory render_cpt(0);\r\n\r\n\r\nzone = in1;\r\n\r\n// Model init phase\r\n\r\n\r\nif(model_init == 0){\r\n\tinit_mat(gnd, 0.5, 0.5);\r\n\tinit_mat(inpos, 0., 0.);\r\n\tdim, chan = init_multiple_masses(strmasses, 0., 0.0000);\r\n\t\r\n\tset_pos(strmasses, 4, 0., 0.000);\r\n\t\r\n\t// Raise init flag\r\n\tmodel_init = 1;\r\n}\r\n\r\nupdate_input_pos(inpos, in2);\r\nupdate_input_pos(inp4, in4);\r\n\r\n\r\ncompute_string(strmasses, M, K, Z);\r\n\r\nm1, m2, alpha = compute_moving_contact(strmasses, inpos, zone, cK, cZ, 0.0);\r\n\r\n\r\np = floor(exPos*chan);\r\n\r\ncompute_moving_nlBow(strmasses, inp4, nlz, nlscale, p);\r\n\r\npoke(strmasses, peek(strmasses,2, p) + in3, 2, p);\r\n\r\n// Output routing\r\n\r\nlisten = floor(lPos*chan);\r\n\r\nout1 = get_pos(strmasses, listen);\r\nout2 = p;\r\nout3 = listen;\r\nout4 = m1;\r\nout5 = m2;\r\nout6 = alpha;\r\n\r\nif(render_cpt == 0){\r\n\tfor(i = 0; i < chan; i+=1){\r\n\t\tmotion.poke(get_pos(strmasses, i), i, 0);\r\n\t}\r\n}\r\nrender_cpt = (render_cpt + 1) % 200;",
					"fontface" : 0,
					"fontname" : "Arial",
					"fontsize" : 12.0,
					"id" : " phyMdlBox ",
					"maxclass" : "codebox",
					"numinlets" : 4,
					"numoutlets" : 6,
					"outlettype" : [ "", "", "", "", "", "" ],
					"patching_rect" : [ 20.0, 50.0, 461.0, 297.600006 ],
					"style" : ""
				}

			}
, 			{
				"box" : 				{
					"id" : " outbox_1 ",
					"maxclass" : "newobj",
					"numinlets" : 1,
					"numoutlets" : 0,
					"patching_rect" : [ 20.0, 366.0, 36.0, 22.0 ],
					"style" : "",
					"text" : "out 1"
				}

			}
 ],
		"lines" : [ 			{
				"patchline" : 				{
					"destination" : [ " outbox_1 ", 0 ],
					"source" : [ " phyMdlBox ", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-1", 0 ],
					"source" : [ " phyMdlBox ", 1 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-2", 0 ],
					"source" : [ " phyMdlBox ", 2 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-4", 0 ],
					"source" : [ " phyMdlBox ", 5 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-5", 0 ],
					"source" : [ " phyMdlBox ", 4 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ "obj-6", 0 ],
					"source" : [ " phyMdlBox ", 3 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ " phyMdlBox ", 0 ],
					"source" : [ "obj-3", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ " phyMdlBox ", 1 ],
					"source" : [ "obj-7", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ " phyMdlBox ", 2 ],
					"source" : [ "obj-8", 0 ]
				}

			}
, 			{
				"patchline" : 				{
					"destination" : [ " phyMdlBox ", 3 ],
					"source" : [ "obj-9", 0 ]
				}

			}
 ]
	}

}
